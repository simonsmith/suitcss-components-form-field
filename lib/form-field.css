/*
 * @define FormField
*/

/**
 * 1. Blink ignores `currentcolor` on textarea unless
 *    a border radius value is set.
 */

:root {
  --FormField-label-color: inherit;
  --FormField-label-marginBottom: 0.25em;

  --FormField-input-borderColor: currentcolor;
  --FormField-input-borderRadius: 0.1px; /* 1 */
  --FormField-input-borderWidth: 1px;
  --FormField-input-color: inherit;
  --FormField-input-fontFamily: inherit;
  --FormField-input-fontSize: inherit;
  --FormField-input-padding: 0.3em;

  --FormField-text-fontSize: inherit;
  --FormField-text-marginTop: 0.25em;

  --FormField-select-height: 30px;

  --FormField-check-gutter: 0.5em;

  /* States */
  --FormField-input-onDisabled-backgroundColor: #f2f2f2;
  --FormField-onError-color: #d9534f;
  --FormField-onWarning-color: #f0ad4e;
  --FormField-onSuccess-color: #5cb85c;
}

.FormField {
  display: block;
  margin: 0;
}

.FormField-label {
  color: var(--FormField-label-color);
  display: inline-block;
  margin-bottom: var(--FormField-label-marginBottom);
  margin-top: 0;
}

.FormField-select,
.FormField-input,
.FormField-checkInput {
  box-sizing: border-box;
  font-size: var(--FormField-input-fontSize);
}

.FormField-select,
.FormField-input {
  background-color: #fff;
  border-color: var(--FormField-input-borderColor);
  border-radius: var(--FormField-input-borderRadius);
  border-style: solid;
  border-width: var(--FormField-input-borderWidth);
  color: var(--FormField-input-color);
  display: block;
  font-family: var(--FormField-input-fontFamily);
  margin: 0;
  padding: var(--FormField-input-padding);
  width: 100%;
}

/*
 * Control height manually on select elements as Webkit/Blink does not respect
 * padding values
 */

.FormField-select:not([size]):not([multiple]) {
  height: var(--FormField-select-height);
}

/*
 * Remove native search input styling
 */

.FormField-input[type="search"] {
  appearance: none;
}

/**
 * Reset border on certain elements for cross-browser use
 */

.FormField-input[type="file"],
.FormField-input[type="range"] {
  border: 0;
}

/*
 * Ensure disabled/read-only fields are obvious to the user
 */

.FormField-input:disabled,
.FormField-input[readonly] {
  background-color: var(--FormField-input-onDisabled-backgroundColor);
  cursor: not-allowed;
}

.FormField-text {
  display: inline-block;
  font-size: var(--FormField-text-fontSize);
  margin-bottom: 0;
  margin-top: var(--FormField-text-marginTop);
}

/**
 * Additional wrapper around checkbox/radio elements.
 * This controls alignment and allows a FormField-text to be added after
 */

.FormField-check {
  align-items: baseline;
  display: flex;
}

.FormField-checkInput {
  margin: 0 var(--FormField-check-gutter) 0 0;
  order: 1;
  padding: 0;
}

.FormField-checkLabel {
  color: var(--FormField-label-color);
  order: 2;
}

/**
 * Validation states
 */

.FormField.is-error .FormField-input,
.FormField.is-error .FormField-select {
  border-color: var(--FormField-onError-color);
}

.FormField.is-error .FormField-label,
.FormField.is-error .FormField-text {
  color: var(--FormField-onError-color);
}

.FormField.is-warning .FormField-input,
.FormField.is-warning .FormField-select {
  border-color: var(--FormField-onWarning-color);
}

.FormField.is-warning .FormField-label,
.FormField.is-warning .FormField-text {
  color: var(--FormField-onWarning-color);
}

.FormField.is-success .FormField-input,
.FormField.is-success .FormField-select {
  border-color: var(--FormField-onSuccess-color);
}

.FormField.is-success .FormField-label,
.FormField.is-success .FormField-text {
  color: var(--FormField-onSuccess-color);
}
